{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"size": 10, "id": "vscode"}, {"size": 10, "id": "require"}, {"size": 10, "id": "'vscode'"}, {"size": 10, "id": "vscode.ExtensionContext"}, {"size": 10, "id": "context"}, {"size": 10, "id": "activate"}, {"size": 10, "id": "editor"}, {"size": 10, "id": "vscode.window.activeTextEditor"}, {"size": 10, "id": "generate"}, {"size": 10, "id": "vscode.commands.registerCommand('example.helloWorld', async function () {})"}, {"size": 10, "id": ""}, {"size": 10, "id": "vscode.window.activeNotebookEditor"}, {"size": 10, "id": "vscode.window.showErrorMessage('No active text or notebook editor found.')"}, {"size": 10, "id": " "}, {"size": 10, "id": "try"}, {"size": 10, "id": "if"}, {"size": 10, "id": "editor.document"}, {"size": 10, "id": "position"}, {"size": 10, "id": "editor.selection.active"}, {"size": 10, "id": "currentLine"}, {"size": 10, "id": "position.line"}, {"size": 10, "id": "start"}, {"size": 10, "id": "vscode.Position"}, {"size": 10, "id": "0"}, {"size": 10, "id": "end"}, {"size": 10, "id": "editor.document.lineAt(currentLine).text.length"}, {"size": 10, "id": "selection"}, {"size": 10, "id": "vscode.Selection"}, {"size": 10, "id": "editor.document.getText(selection)"}, {"size": 10, "id": "context.trim()"}, {"size": 10, "id": "false"}, {"size": 10, "id": "editor.document.getText()"}, {"size": 10, "id": "else if"}, {"size": 10, "id": "editor.notebook"}, {"size": 10, "id": "true"}, {"size": 10, "id": "notebook"}, {"size": 10, "id": "activeCell"}, {"size": 10, "id": "vscode.window.showErrorMessage('No active cell found in the notebook editor.')"}, {"size": 10, "id": "code"}, {"size": 10, "id": "document"}, {"size": 10, "id": "getText"}, {"size": 10, "id": "trim"}, {"size": 10, "id": "allCode"}, {"size": 10, "id": "cell"}, {"size": 10, "id": "cells"}, {"size": 10, "id": "editor.selection"}, {"size": 10, "id": "catch"}, {"size": 10, "id": "error"}, {"size": 10, "id": "vscode.window.showErrorMessage"}, {"size": 10, "id": "editor.notebook.cells"}, {"size": 10, "id": "cell.document.getText()"}, {"size": 10, "id": "allCode += cell.document.getText() + '\n'"}, {"size": 10, "id": "allCode.trim()"}, {"size": 10, "id": "active"}, {"size": 10, "id": "Position"}, {"size": 10, "id": "lineAt(currentLine)"}, {"size": 10, "id": "text"}, {"size": 10, "id": "length"}, {"size": 10, "id": "Selection"}, {"size": 10, "id": "getText(selection)"}, {"size": 10, "id": "get_task"}, {"size": 10, "id": "vscode.window.showInputBox"}, {"size": 10, "id": "placeHolder"}, {"size": 10, "id": "'Enter your value here...'"}, {"size": 10, "id": "prompt"}, {"size": 10, "id": "'This is a prompt for the input box.'"}, {"size": 10, "id": "value"}, {"size": 10, "id": "'Enter your task'"}, {"size": 10, "id": "task"}, {"size": 10, "id": "task.trim() != \"\""}, {"size": 10, "id": "task.trim() != \".\""}, {"size": 10, "id": "vscode.window.showInformationMessage('Fetching Code!')"}, {"size": 10, "id": "fetch"}, {"size": 10, "id": "https://web-production-ecbc.up.railway.app/generate"}, {"size": 10, "id": "method"}, {"size": 10, "id": "POST"}, {"size": 10, "id": "body"}, {"size": 10, "id": "JSON.stringify({ query: task, current_code: code })"}, {"size": 10, "id": "headers"}, {"size": 10, "id": "{ \"Content-type\": \"application/json\" }"}, {"size": 10, "id": "then"}, {"size": 10, "id": "response"}, {"size": 10, "id": "response.ok"}, {"size": 10, "id": "throw new Error('Network response was not ok')"}, {"size": 10, "id": "anonymous function"}, {"size": 10, "id": "json()"}, {"size": 10, "id": "json"}, {"size": 10, "id": "line"}, {"size": 10, "id": "newPosition"}, {"size": 10, "id": "edit"}, {"size": 10, "id": "editBuilder"}, {"size": 10, "id": "insert"}, {"size": 10, "id": "json.value"}, {"size": 10, "id": "success"}, {"size": 10, "id": "'Failed to insert text into the editor.'"}, {"size": 10, "id": "activeCell.document.positionAt"}, {"size": 10, "id": "activeCell.document.getText()"}, {"size": 10, "id": "activeCell.document.getText().length"}, {"size": 10, "id": "activeCell.document.insert"}, {"size": 10, "id": "'Failed to insert text into the notebook editor.'"}, {"size": 10, "id": "editbuilder"}, {"size": 10, "id": "new vscode.Position(currentLine+1, 0)"}, {"size": 10, "id": "builder"}, {"size": 10, "id": "replace"}, {"size": 10, "id": "newSelection"}, {"size": 10, "id": "console.error('Error during fetch:', error)"}, {"size": 10, "id": "vscode.window.showInformationMessage('Error during fetch: ' + error.message)"}, {"size": 10, "id": "vscode.window.showErrorMessage(\"Task cannot be empty!\")"}, {"size": 10, "id": "store"}, {"size": 10, "id": "vscode.commands.registerCommand"}, {"size": 10, "id": "'example.store'"}, {"size": 10, "id": "function"}, {"size": 10, "id": "async"}, {"size": 10, "id": "storing_code"}, {"size": 10, "id": "window"}, {"size": 10, "id": "showInformationMessage(\"Updating glyph! This might take some time.\")"}, {"size": 10, "id": "https://web-production-ecbc.up.railway.app/store"}, {"size": 10, "id": "JSON.stringify"}, {"size": 10, "id": "Content-type"}, {"size": 10, "id": "application/json"}, {"size": 10, "id": "ok"}, {"size": 10, "id": "Error"}, {"size": 10, "id": "Network response was not ok"}, {"size": 10, "id": "vscode.window.showInformationMessage"}, {"size": 10, "id": "\"glyph updated!\""}, {"size": 10, "id": ".catch"}, {"size": 10, "id": "\"Error during fetch: Try restarting!\""}, {"size": 10, "id": "subscriptions"}, {"size": 10, "id": "push"}, {"size": 10, "id": "deactivate"}, {"size": 10, "id": "module.exports"}], "links": [{"label": "has method", "width": 1, "source": "vscode", "target": "require"}, {"label": "has attribute", "width": 1, "source": "vscode", "target": "window"}, {"label": "has parameter", "width": 1, "source": "require", "target": "'vscode'"}, {"label": "returns", "width": 1, "source": "require", "target": "vscode"}, {"label": "has parameter", "width": 1, "source": "vscode.ExtensionContext", "target": "context"}, {"label": "assigned from", "width": 1, "source": "context", "target": ""}, {"label": "assigned from", "width": 1, "source": "context", "target": " "}, {"label": "assigned to", "width": 1, "source": "context", "target": "editor.document.getText(selection)"}, {"label": "has attribute", "width": 1, "source": "context", "target": "subscriptions"}, {"label": "has parameter", "width": 1, "source": "activate", "target": "context"}, {"label": "has attribute", "width": 1, "source": "activate", "target": "editor"}, {"label": "has attribute", "width": 1, "source": "activate", "target": "generate"}, {"label": "assigned from", "width": 1, "source": "editor", "target": "vscode.window.activeTextEditor"}, {"label": "assigned from", "width": 1, "source": "editor", "target": "vscode.window.activeNotebookEditor"}, {"label": "has attribute", "width": 1, "source": "editor", "target": "selection"}, {"label": "calls", "width": 1, "source": "editor", "target": "edit"}, {"label": "has attribute", "width": 1, "source": "editor", "target": "document"}, {"label": "assigned from", "width": 1, "source": "generate", "target": "vscode.commands.registerCommand('example.helloWorld', async function () {})"}, {"label": "has attribute", "width": 1, "source": "vscode.commands.registerCommand('example.helloWorld', async function () {})", "target": "context"}, {"label": "has attribute", "width": 1, "source": "vscode.commands.registerCommand('example.helloWorld', async function () {})", "target": "editor"}, {"label": "has statement", "width": 1, "source": "vscode.commands.registerCommand('example.helloWorld', async function () {})", "target": "vscode.window.showErrorMessage('No active text or notebook editor found.')"}, {"label": "contains", "width": 1, "source": "try", "target": "if"}, {"label": "has statement", "width": 1, "source": "try", "target": "editor.selection"}, {"label": "has statement", "width": 1, "source": "try", "target": "catch"}, {"label": "condition", "width": 1, "source": "if", "target": "editor.document"}, {"label": "declares", "width": 1, "source": "if", "target": "position"}, {"label": "declares", "width": 1, "source": "if", "target": "currentLine"}, {"label": "declares", "width": 1, "source": "if", "target": "start"}, {"label": "declares", "width": 1, "source": "if", "target": "end"}, {"label": "declares", "width": 1, "source": "if", "target": "selection"}, {"label": "then", "width": 1, "source": "if", "target": "context"}, {"label": "condition", "width": 1, "source": "if", "target": "context.trim()"}, {"label": "condition value", "width": 1, "source": "if", "target": "false"}, {"label": "then", "width": 1, "source": "if", "target": "editor.document.getText()"}, {"label": "else", "width": 1, "source": "if", "target": "else if"}, {"label": "condition", "width": 1, "source": "if", "target": "activeCell"}, {"label": "then", "width": 1, "source": "if", "target": "vscode.window.showErrorMessage('No active cell found in the notebook editor.')"}, {"label": "then", "width": 1, "source": "if", "target": ""}, {"label": "has condition", "width": 1, "source": "if", "target": "task"}, {"label": "condition", "width": 1, "source": "if", "target": "task.trim() != \"\""}, {"label": "condition", "width": 1, "source": "if", "target": "task.trim() != \".\""}, {"label": "then", "width": 1, "source": "if", "target": "vscode.window.showInformationMessage('Fetching Code!')"}, {"label": "then", "width": 1, "source": "if", "target": "fetch"}, {"label": "has condition", "width": 1, "source": "if", "target": "success"}, {"label": "returns", "width": 1, "source": "editor.document", "target": "editor.document.getText()"}, {"label": "assigned to", "width": 1, "source": "position", "target": "editor.selection.active"}, {"label": "is attribute of", "width": 1, "source": "position", "target": "editor"}, {"label": "has attribute", "width": 1, "source": "position", "target": "selection"}, {"label": "has attribute", "width": 1, "source": "position", "target": "line"}, {"label": "returns", "width": 1, "source": "editor.selection.active", "target": "activeCell"}, {"label": "assigned to", "width": 1, "source": "currentLine", "target": "position.line"}, {"label": "is attribute of", "width": 1, "source": "currentLine", "target": "position"}, {"label": "instance of", "width": 1, "source": "start", "target": "vscode.Position"}, {"label": "has attribute", "width": 1, "source": "start", "target": "0"}, {"label": "is instance of", "width": 1, "source": "start", "target": "vscode"}, {"label": "is instance of", "width": 1, "source": "start", "target": "Position"}, {"label": "instance of", "width": 1, "source": "end", "target": "vscode.Position"}, {"label": "has attribute", "width": 1, "source": "end", "target": "currentLine"}, {"label": "parameter", "width": 1, "source": "end", "target": "editor.document.lineAt(currentLine).text.length"}, {"label": "is instance of", "width": 1, "source": "end", "target": "vscode"}, {"label": "is instance of", "width": 1, "source": "end", "target": "Position"}, {"label": "has attribute", "width": 1, "source": "end", "target": "editor.document"}, {"label": "has attribute", "width": 1, "source": "end", "target": "lineAt(currentLine)"}, {"label": "instance of", "width": 1, "source": "selection", "target": "vscode.Selection"}, {"label": "has attribute", "width": 1, "source": "selection", "target": "start"}, {"label": "has attribute", "width": 1, "source": "selection", "target": "end"}, {"label": "has attribute", "width": 1, "source": "selection", "target": "active"}, {"label": "is instance of", "width": 1, "source": "selection", "target": "vscode"}, {"label": "is instance of", "width": 1, "source": "selection", "target": "Selection"}, {"label": "assigns to", "width": 1, "source": "editor.document.getText()", "target": "context"}, {"label": "then", "width": 1, "source": "else if", "target": "editor.notebook"}, {"label": "condition value", "width": 1, "source": "else if", "target": "true"}, {"label": "then", "width": 1, "source": "else if", "target": "notebook"}, {"label": "then", "width": 1, "source": "else if", "target": "activeCell"}, {"label": "then", "width": 1, "source": "else if", "target": "editor.selection.active"}, {"label": "then", "width": 1, "source": "else if", "target": "if"}, {"label": "has attribute", "width": 1, "source": "editor.notebook", "target": "allCode"}, {"label": "has attribute", "width": 1, "source": "editor.notebook", "target": "editor.notebook.cells"}, {"label": "has attribute", "width": 1, "source": "editor.notebook", "target": "editor.selection.active"}, {"label": "has attribute", "width": 1, "source": "notebook", "target": "cells"}, {"label": "has attribute", "width": 1, "source": "activeCell", "target": "document"}, {"label": "has method", "width": 1, "source": "activeCell", "target": "activeCell.document.positionAt"}, {"label": "has method", "width": 1, "source": "code", "target": "trim"}, {"label": "has attribute", "width": 1, "source": "code", "target": "editor.document"}, {"label": "has attribute", "width": 1, "source": "code", "target": "getText(selection)"}, {"label": "has method", "width": 1, "source": "document", "target": "getText"}, {"label": "has method", "width": 1, "source": "document", "target": "getText(selection)"}, {"label": "returns", "width": 1, "source": "getText", "target": "code"}, {"label": "returns", "width": 1, "source": "trim", "target": "code"}, {"label": "returns", "width": 1, "source": "allCode", "target": "allCode.trim()"}, {"label": "has attribute", "width": 1, "source": "cell", "target": "document"}, {"label": "has element", "width": 1, "source": "cells", "target": "cell"}, {"label": "returns", "width": 1, "source": "editor.selection", "target": "editor.document.getText()"}, {"label": "has parameter", "width": 1, "source": "catch", "target": "error"}, {"label": "has statement", "width": 1, "source": "catch", "target": "vscode.window.showErrorMessage"}, {"label": "has statement", "width": 1, "source": "catch", "target": "editor.document"}, {"label": "has statement", "width": 1, "source": "catch", "target": "editor.notebook"}, {"label": "calls", "width": 1, "source": "catch", "target": "console.error('Error during fetch:', error)"}, {"label": "calls", "width": 1, "source": "catch", "target": "vscode.window.showInformationMessage('Error during fetch: ' + error.message)"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showErrorMessage", "target": "error"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showErrorMessage", "target": "'Failed to insert text into the editor.'"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showErrorMessage", "target": "'Failed to insert text into the notebook editor.'"}, {"label": "returns", "width": 1, "source": "editor.notebook.cells", "target": "cell.document.getText()"}, {"label": "has statement", "width": 1, "source": "cell.document.getText()", "target": "allCode += cell.document.getText() + '\n'"}, {"label": "assigns to", "width": 1, "source": "allCode += cell.document.getText() + '\n'", "target": "allCode"}, {"label": "assigns to", "width": 1, "source": "allCode.trim()", "target": "context"}, {"label": "is attribute of", "width": 1, "source": "lineAt(currentLine)", "target": "text"}, {"label": "is attribute of", "width": 1, "source": "text", "target": "length"}, {"label": "has parameter", "width": 1, "source": "getText(selection)", "target": "selection"}, {"label": "returns", "width": 1, "source": "getText(selection)", "target": "storing_code"}, {"label": "calls", "width": 1, "source": "get_task", "target": "vscode.window.showInputBox"}, {"label": "calls", "width": 1, "source": "get_task", "target": "if"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showInputBox", "target": "placeHolder"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showInputBox", "target": "prompt"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showInputBox", "target": "value"}, {"label": "returns", "width": 1, "source": "vscode.window.showInputBox", "target": "task"}, {"label": "value", "width": 1, "source": "placeHolder", "target": "'Enter your value here...'"}, {"label": "value", "width": 1, "source": "prompt", "target": "'This is a prompt for the input box.'"}, {"label": "value", "width": 1, "source": "value", "target": "'Enter your task'"}, {"label": "parameter", "width": 1, "source": "fetch", "target": "https://web-production-ecbc.up.railway.app/generate"}, {"label": "has parameter", "width": 1, "source": "fetch", "target": "method"}, {"label": "has parameter", "width": 1, "source": "fetch", "target": "body"}, {"label": "has parameter", "width": 1, "source": "fetch", "target": "headers"}, {"label": "has method", "width": 1, "source": "fetch", "target": "then"}, {"label": "has parameter", "width": 1, "source": "fetch", "target": "https://web-production-ecbc.up.railway.app/store"}, {"label": "has value", "width": 1, "source": "method", "target": "POST"}, {"label": "value", "width": 1, "source": "body", "target": "JSON.stringify({ query: task, current_code: code })"}, {"label": "has value", "width": 1, "source": "body", "target": "JSON.stringify"}, {"label": "value", "width": 1, "source": "headers", "target": "{ \"Content-type\": \"application/json\" }"}, {"label": "has attribute", "width": 1, "source": "headers", "target": "Content-type"}, {"label": "has parameter", "width": 1, "source": "then", "target": "response"}, {"label": "condition", "width": 1, "source": "then", "target": "response.ok"}, {"label": "then", "width": 1, "source": "then", "target": "throw new Error('Network response was not ok')"}, {"label": "has parameter", "width": 1, "source": "then", "target": "success"}, {"label": "has parameter", "width": 1, "source": "then", "target": "Error"}, {"label": "has parameter", "width": 1, "source": "then", "target": "json"}, {"label": "has attribute", "width": 1, "source": "response", "target": "ok"}, {"label": "has parameter", "width": 1, "source": "anonymous function", "target": "response"}, {"label": "returns", "width": 1, "source": "anonymous function", "target": "json()"}, {"label": "calls", "width": 1, "source": "anonymous function", "target": "editor"}, {"label": "has attribute", "width": 1, "source": "anonymous function", "target": "document"}, {"label": "has attribute", "width": 1, "source": "anonymous function", "target": "position"}, {"label": "has statement", "width": 1, "source": "anonymous function", "target": "if"}, {"label": "calls", "width": 1, "source": "anonymous function", "target": "catch"}, {"label": "calls", "width": 1, "source": "anonymous function", "target": "vscode.window.showErrorMessage(\"Task cannot be empty!\")"}, {"label": "returns", "width": 1, "source": "json()", "target": "json"}, {"label": "has attribute", "width": 1, "source": "json", "target": "value"}, {"label": "is instance of", "width": 1, "source": "newPosition", "target": "vscode.Position"}, {"label": "has parameter", "width": 1, "source": "newPosition", "target": "currentLine"}, {"label": "has parameter", "width": 1, "source": "newPosition", "target": "0"}, {"label": "has parameter", "width": 1, "source": "edit", "target": "editBuilder"}, {"label": "returns", "width": 1, "source": "edit", "target": "then"}, {"label": "has parameter", "width": 1, "source": "edit", "target": "editbuilder"}, {"label": "calls", "width": 1, "source": "edit", "target": "insert"}, {"label": "has parameter", "width": 1, "source": "edit", "target": "builder"}, {"label": "calls", "width": 1, "source": "edit", "target": "replace"}, {"label": "has method", "width": 1, "source": "editBuilder", "target": "insert"}, {"label": "has parameter", "width": 1, "source": "insert", "target": "newPosition"}, {"label": "has parameter", "width": 1, "source": "insert", "target": "json.value"}, {"label": "has parameter", "width": 1, "source": "insert", "target": "new vscode.Position(currentLine+1, 0)"}, {"label": "has condition", "width": 1, "source": "success", "target": "vscode.window.showErrorMessage"}, {"label": "has parameter", "width": 1, "source": "activeCell.document.positionAt", "target": "activeCell.document.getText()"}, {"label": "returns", "width": 1, "source": "activeCell.document.positionAt", "target": "position"}, {"label": "has method", "width": 1, "source": "activeCell.document.getText()", "target": "activeCell.document.getText().length"}, {"label": "has parameter", "width": 1, "source": "activeCell.document.insert", "target": "position"}, {"label": "has parameter", "width": 1, "source": "activeCell.document.insert", "target": "json.value"}, {"label": "returns", "width": 1, "source": "activeCell.document.insert", "target": "success"}, {"label": "has parameter", "width": 1, "source": "replace", "target": "newSelection"}, {"label": "has parameter", "width": 1, "source": "replace", "target": "json.value"}, {"label": "is assigned to", "width": 1, "source": "store", "target": "vscode.commands.registerCommand"}, {"label": "has parameter", "width": 1, "source": "vscode.commands.registerCommand", "target": "'example.store'"}, {"label": "has parameter", "width": 1, "source": "vscode.commands.registerCommand", "target": "function"}, {"label": "is", "width": 1, "source": "function", "target": "async"}, {"label": "has method", "width": 1, "source": "window", "target": "showInformationMessage(\"Updating glyph! This might take some time.\")"}, {"label": "has parameter", "width": 1, "source": "JSON.stringify", "target": "storing_code"}, {"label": "has value", "width": 1, "source": "Content-type", "target": "application/json"}, {"label": "has parameter", "width": 1, "source": "Error", "target": "Network response was not ok"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showInformationMessage", "target": "\"glyph updated!\""}, {"label": "has method", "width": 1, "source": "vscode.window.showInformationMessage", "target": ".catch"}, {"label": "has parameter", "width": 1, "source": "vscode.window.showInformationMessage", "target": "\"Error during fetch: Try restarting!\""}, {"label": "has parameter", "width": 1, "source": ".catch", "target": "error"}, {"label": "has method", "width": 1, "source": ".catch", "target": "vscode.window.showInformationMessage"}, {"label": "has method", "width": 1, "source": "subscriptions", "target": "push"}, {"label": "has parameter", "width": 1, "source": "push", "target": "generate"}, {"label": "has parameter", "width": 1, "source": "push", "target": "store"}, {"label": "has attribute", "width": 1, "source": "module.exports", "target": "activate"}, {"label": "has attribute", "width": 1, "source": "module.exports", "target": "deactivate"}]}